import * as React from 'react';


// The main app component.
const App = () => {

  // Available developer stories.
  const stories = [
    {
      title: "React",
      url: "https://reactjs.org/",
      author: "Jordan Walke",
      num_comments: 3,
      points: 4,
      objectID: 0,
    },
    {
      title: "Redux",
      url: "https://redux.js.org/",
      author: "Dan Abramov, Andrew Clark",
      num_comments: 2,
      points: 5,
      objectID: 1,
    },
    {
      title: "Apple Jam",
      url: "https://redux.js.org/",
      author: "Bryan Bookstaff",
      num_comments: 4,
      points: 3,
      objectID: 2,
    },
  ]

  // For managing the state of a searched term.
  const [searchTerm, setSearchTerm] = React.useState("");

  // An event handler that is used as a callback handler for information to be
  // passed from a child to a parent component (here, the information is an event
  // generated by keyboard input in the input field in the Search component).
  const handleSearch = (event) => {
    setSearchTerm(event.target.value);
  };

  // Filters the available stories by the current searchTerm defined in the
  // above state handler.
  const searchedStories = stories.filter((story) =>
    story.title.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div>
      <h1>My Hacker Stories</h1>

      {/* Above handleSearch event handler passed to the Search component.
          The current searchTerm is also passed down. */}
      <Search search={searchTerm} onSearch={handleSearch} />

      <br />
      <hr />

      <List list={searchedStories} />

    </div>
  );
};


// Component for a search field.
const Search = ({ search, onSearch }) => {
  return (
    <div>
      <label htmlFor="search">Search: </label>

      {/* By passing the current searchTerm down from App to here, the current
          state of searchTerm can be explicitly set as the value of the below
          input field.
          The onChange event is passed via props to onSearch defined in the
          Search instantiation. This process of passing state from a child
          component to the parent component is called "lifting state". */}
      <input id="search" type="text" value={search} onChange={onSearch} />
    </div>
  );
};


// Component for a list.
const List = ({ list }) => {
  return (
    <ul>
      {list.map((item) => {
        return (
          <Item key={item.objectID} item={item}/>
        );
      })}
    </ul>
  );
};


// Component for a list item.
const Item = ({ item }) => {
  return (
    <li>
      <span>
        <a href={item.url}>{item.title}</a>
      </span>
      <span>; {item.author}</span>
      <span>; {item.num_comments} comments</span>
      <span>; {item.points} points</span>
    </li>
  );
};


export default App;
